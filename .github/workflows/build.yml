name: ci

on:
  pull_request:

  push:
    branches:
      - master

jobs:
  ci:
    name: ${{ matrix.os }}-python${{ matrix.python-version }}-node@${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    env:
      PYAUD_GH_NAME: jshwi
      PYAUD_GH_EMAIL: stephen@jshwisolutions.com
      PYAUD_GH_TOKEN: ${{ secrets.PYAUD_GH_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      CODECOV_SLUG: jshwi/jss

    strategy:
      matrix:
        python-version: [3.8]
        os: [ubuntu-latest]
        node-version: [16.x.x]

    steps:
      - name: Checkout build
        id: checkout-build
        uses: actions/checkout@v2

      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip poetry wheel

      - name: Cache Poetry
        uses: actions/cache@v2
        id: poetry-cache
        with:
          path: ~/.cache/pypoetry/virtualenvs/
          key: ${{ runner.os }}-pip-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install Node packages
        run: |
          npm install

      - name: Setup poetry
        id: setup-poetry
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: |
          poetry install

      - name: Audit
        id: audit
        run: |
          npm run audit
