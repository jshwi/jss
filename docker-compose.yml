version: "3.8"

x-development: &development
  build:
    context: .
    target: development
  environment: &dev-environment
    DATABASE: "postgres"
    DATABASE_URL: "postgresql://jss:jss@dev-postgres:5432/jss"
    REDIS_URL: "redis://dev-redis:6379/0"
    SQL_HOST: "dev-postgres"
    SQL_PORT: "5432"
    MAIL_PASSWORD: ${DEV_MAIL_PASSWORD}
    MAIL_PORT: ${DEV_MAIL_PORT}
    MAIL_SERVER: ${DEV_MAIL_SERVER}
    MAIL_USERNAME: ${DEV_MAIL_USERNAME}
    MAIL_USE_SSL: ${DEV_MAIL_USE_SSL}
    MAIL_USE_TLS: ${DEV_MAIL_USE_TLS}
  image: jss-development:1.21.3
  volumes:
    - ./app:/home/jss/app/
    - ./migrations:/home/jss/migrations/

  x-testing: &testing
    build:
      context: .
      target: development
    environment: &test-environment
      FLASK_ENV: "testing"
      DATABASE: "postgres"
      DATABASE_URL: "postgresql://jss:jss@test-postgres:5432/jss"
      REDIS_URL: "redis://test-redis:6379/0"
      SQL_HOST: "test-postgres"
      SQL_PORT: "5432"
    image: jss-testing:1.21.3
    volumes:
      - ./app:/home/jss/app/
      - ./migrations:/home/jss/migrations/
      - ./tests:/home/jss/tests/

x-redis: &redis
  image: redis:6.2-alpine
  ports:
    - "6379:6379"

x-postgres: &postgres
  environment:
    POSTGRES_USER: jss
    POSTGRES_PASSWORD: jss
    POSTGRES_DB: jss
  image: postgres:13-alpine
  ports:
    - "5432:5432"

services:
  dev:
    <<: *development
    entrypoint: ./entrypoint
    command: flask run --host 0.0.0.0
    container_name: jss-dev
    depends_on:
      - dev-postgres
      - dev-redis
    environment:
      <<: *dev-environment
    ports:
      - "5000:5000"

  dev-postgres:
    <<: *postgres
    container_name: jss-dev-postgres
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data/

  dev-redis:
    <<: *redis
    container_name: jss-dev-redis
    volumes:
      - dev_redis_dump:/data/

  test:
    <<: *testing
    entrypoint: ./entrypoint
    command: pytest --cov=app
    container_name: jss-test
    depends_on:
      - test-postgres
      - test-redis
    environment:
      <<: *test-environment
    ports:
      - "5001:5000"

  test-postgres:
    <<: *postgres
    container_name: jss-test-postgres
    ports:
      - "5433:5432"

  test-redis:
    <<: *redis
    container_name: jss-test-redis
    ports:
      - "6380:6379"

  production:
    build:
      context: .
      target: production
    container_name: jss-production
    depends_on:
      - nginx
    environment:
      - "ADMINS"
      - "ADMIN_SECRET"
      - "BRAND"
      - "COPYRIGHT_AUTHOR"
      - "COPYRIGHT_EMAIL"
      - "CSP_REPORT_ONLY"
      - "DATABASE_URL"
      - "DEFAULT_MAIL_SENDER"
      - "HEROKU_DATABASE_URL"
      - "LOGDNA_KEY"
      - "LOG_LEVEL"
      - "MAIL_DEFAULT_SENDER"
      - "MAIL_PASSWORD"
      - "MAIL_PORT"
      - "MAIL_SERVER"
      - "MAIL_SUBJECT_PREFIX"
      - "MAIL_USERNAME"
      - "NAVBAR_HOME"
      - "NAVBAR_ICONS"
      - "NAVBAR_USER_DROPDOWN"
      - "PYTHON_RUNTIME_VERSION"
      - "REDIS_TLS_URL"
      - "REDIS_URL"
      - "RESERVED_USERNAMES"
      - "SECRET_KEY"
      - "SEND_FILE_MAX_AGE_DEFAULT"
    expose:
      - 5000
    image: jss-production:1.21.3
    volumes:
      - static_volume:/home/jss/app/static/

  nginx:
    build:
      context: .
      target: nginx
    container_name: jss-nginx
    image: jss-nginx:1.21.3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/home/jss/app/static/

volumes:
  dev_postgres_data:
  dev_redis_dump:
  static_volume:
