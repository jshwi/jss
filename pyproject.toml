[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1.0.0"
]

[tool.black]
exclude = '''
/(
  | \.git
  | \.mypy_cache
  | _build
  | build
  | dist
  | migrations
)/
'''
line-length = 79
skip-magic-trailing-comma = true

[tool.constcheck]
ignore_strings = [
  "data",
  "store",
  "store_true",
  "utf-8"
]

[tool.coverage.report]
fail_under = 100

[tool.coverage.run]
omit = [
  "whitelist.py"
]

[tool.docsig]
check-class = true
summary = true

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 79
multi_line_output = 3
profile = "black"
use_parentheses = true

[tool.poetry]
authors = [
  "jshwi <stephen@jshwisolutions.com>"
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Framework :: Flask",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Software Development",
  "Typing :: Typed"
]
description = "A Flask webapp"
documentation = "https://jss.readthedocs.io/en/latest"
homepage = "https://jshwisolutions.com"
keywords = [
  "blog",
  "flask",
  "jshwisolutions",
  "pwa",
  "webapp"
]
license = "MIT"
maintainers = [
  "jshwi <stephen@jshwisolutions.com>"
]
name = "jss"
packages = [
  {include = "app"}
]
readme = "README.rst"
repository = "https://github.com/jshwi/jss"
version = "1.21.1"

[tool.poetry.dependencies]
Bootstrap-Flask = "^2.0.2"
Flask = "~2.0.2"
Flask-Admin = "^1.6.0"
Flask-Babel = "^2.0.0"
Flask-Compress = "^1.13"
Flask-DebugToolbar = "^0.13.1"
Flask-Login = "^0.6.2"
Flask-Mail = "^0.9.1"
Flask-Migrate = "^4.0.4"
Flask-Misaka = "^1.0.0"
Flask-Moment = "^1.0.5"
Flask-PageDown = "^0.4.0"
Flask-SQLAlchemy = "^2.5.1"
Flask-Static-Digest = "^0.2.1"
Flask-WTF = "^1.1.0"
Jinja2 = "3.0.3"
MarkupSafe = "^2.1.2"
PyJWT = "^2.6.0"
SQLAlchemy = "^1.4.36"
SQLAlchemy-Continuum = "^1.3.13"
SQLAlchemy-Utils = "^0.39.0"
WTForms = "^3.0.1"
Werkzeug = "~2.0.2"
appdirs = "^1.4.4"
beautifulsoup4 = "^4.11.1"
click = "^8.1.3"
cryptography = "^38.0.3"
email-validator = "^1.3.1"
environs = "^9.5.0"
flask-talisman = "^1.0.0"
gunicorn = "^20.1.0"
hiredis = "^2.2.1"
itsdangerous = "^2.1.2"
psycopg2 = "^2.9.5"
python = "^3.8"
redis = "^4.5.1"
rq = "^1.12.0"
six = "^1.16.0"
tomli = "^2.0.1"

[tool.poetry.group.dev.dependencies]
bump2version = "^1.0.1"
flaky = "^3.7.0"
flask-shell-ipython = "^0.4.1"
ipython = "^8.9.0"
pre-commit = "^2.21.0"
prompt-toolkit = "^3.0.32"
pyOpenSSL = "^22.1.0"
pyaud = "^4.0.2"
pylint = "^2.16.1"
pytest = "^7.2.1"
pytest-randomly = "^3.12.0"
pytest-xdist = "^3.2.0"
restview = "^3.0.1"
sphinx-toolbox = "^3.2.0"
templatest = "^0.7.0"

[tool.pyaud.audit]
modules = [
  "const",
  "docs",
  "files",
  "format",
  "format-docs",
  "format-str",
  "imports",
  "lint",
  "params",
  "test",
  "typecheck",
  "unused"
]

[tool.pyaud.clean]
exclude = [
  ".env",
  ".mypy_cache",
  "instance",
  "node_modules"
]

[tool.pyaud.indexing]
exclude = [
  "conf.py",
  "migrations",
  "whitelist.py",
  "wsgi.py"
]

[tool.pyaud.logging]
disable_existing_loggers = true
version = 1

[tool.pyaud.logging.formatters.standard]
format = "%(asctime)s %(levelname)s %(name)s %(message)s"

[tool.pyaud.logging.handlers.default]
backupCount = 60
class = "logging.handlers.TimedRotatingFileHandler"
filename = "~/.cache/pyaud/log/pyaud.log"
formatter = "standard"
when = "d"

[tool.pyaud.logging.root]
handlers = [
  "default"
]
level = "DEBUG"
propagate = false

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--cov-report=term-missing",
  "--durations=5",
  "-n=auto",
  "-vv"
]
filterwarnings = "ignore::DeprecationWarning"
norecursedirs = [
  ".git",
  ".idea",
  ".mypy_cache",
  ".pytest_cache",
  "docs"
]
