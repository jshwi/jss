[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1.0.0"
]

[tool.black]
exclude = '''
/(
  | \.git
  | \.mypy_cache
  | _build
  | build
  | dist
  | migrations
)/
'''
line-length = 79
skip-magic-trailing-comma = true

[tool.constcheck]
ignore_strings = [
  "--input-file",
  "--output-dir",
  "COPYRIGHT_AUTHOR",
  "GET",
  "LC_MESSAGES",
  "POST",
  "Password",
  "SECRET_KEY",
  "Submit",
  "TRANSLATIONS_DIR",
  "app",
  "data",
  "dynamic",
  "index",
  "messages.po",
  "messages.pot",
  "public.profile",
  "pybabel",
  "store",
  "store_true",
  "update",
  "user.id",
  "utf-8"
]

[tool.coverage.report]
fail_under = 100

[tool.coverage.run]
omit = [
  "whitelist.py"
]

[tool.deptry]
exclude = ['migrations\/.*', 'tests\/.*']

[tool.deptry.per_rule_ignores]
DEP002 = [
  "Jinja2",
  "email-validator",
  "gunicorn",
  "psycopg2"
]

[tool.docsig]
check-class = true
summary = true

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 79
multi_line_output = 3
profile = "black"
use_parentheses = true

[tool.poetry]
authors = [
  "jshwi <stephen@jshwisolutions.com>"
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Framework :: Flask",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Software Development",
  "Typing :: Typed"
]
description = "A Flask webapp"
documentation = "https://jss.readthedocs.io/en/latest"
homepage = "https://jshwisolutions.com"
keywords = [
  "blog",
  "flask",
  "jshwisolutions",
  "pwa",
  "webapp"
]
license = "MIT"
maintainers = [
  "jshwi <stephen@jshwisolutions.com>"
]
name = "jss"
packages = [
  {include = "app"}
]
readme = "README.md"
repository = "https://github.com/jshwi/jss"
version = "1.36.4"

[tool.poetry.dependencies]
Bootstrap-Flask = "^2.0.2"
Flask = "~2.2.5"
Flask-Admin = "^1.6.0"
Flask-Babel = "^2.0.0"
Flask-Compress = "^1.13"
Flask-DebugToolbar = "^0.15.1"
Flask-Login = "^0.6.2"
Flask-Mail = "^0.9.1"
Flask-Migrate = "^4.0.7"
Flask-Misaka = "^1.0.1"
Flask-Moment = "^1.0.5"
Flask-PageDown = "^0.4.0"
Flask-SQLAlchemy = "^3.0.5"
Flask-Static-Digest = "^0.4.0"
Flask-WTF = "^1.0.1"
Jinja2 = "3.0.3"
PyJWT = "^2.9.0"
SQLAlchemy = "^1.4.49"
SQLAlchemy-Continuum = "^1.4.0"
SQLAlchemy-Utils = "^0.41.2"
WTForms = "^3.1.2"
Werkzeug = "~2.3.6"
beautifulsoup4 = "^4.12.3"
click = "8.1.3"
email-validator = "^2.1.1"
environs = "^10.3.0"
flask-sitemap = "^0.4.0"
flask-talisman = "^1.1.0"
gunicorn = "^22.0.0"
itsdangerous = "^2.2.0"
psycopg2 = "^2.9.7"
python = "^3.8"
stripe = "^10.8.0"
tomli = "^2.0.1"

[tool.poetry.dev-dependencies]
bump2version = "^1.0.1"
deptry = "^0.19.0"
flask-shell-ipython = "^0.5.1"
pre-commit = "^3.3.3"
pyOpenSSL = "^24.2.1"
pyaud = "^7.5.1"
pylint = "^3.2.0"
pytest = "^8.2.0"
pytest-flakefinder = "^1.1.0"
pytest-randomly = "^3.13.0"
pytest-xdist = "^3.3.1"
sphinx-immaterial = "^0.11.14"
sphinx-toolbox = "^3.7.0"
templatest = "^0.10.1"

[tool.pyaud]
audit = [
  "about-tests",
  "commit-policy",
  "const",
  "copyright-year",
  "coverage",
  "doctest-package",
  "files",
  "format",
  "format-docs",
  "format-str",
  "imports",
  "lint",
  "params",
  "typecheck",
  "unused"
]
exclude = '''
  (?x)^(
    | poetry\.lock
    | package-lock\.json
    | migrations\/.*
    | \.bumpversion\.cfg
    | docs\/conf\.py
    | whitelist\.py
    | wsgi\.py
  )$
'''

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--cov-report=term-missing",
  "--durations=5",
  "-n=auto",
  "-vv"
]
filterwarnings = "ignore::DeprecationWarning"
norecursedirs = [
  ".git",
  ".idea",
  ".mypy_cache",
  ".pytest_cache",
  "docs"
]
